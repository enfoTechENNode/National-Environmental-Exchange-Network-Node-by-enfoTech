//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Node.Core.CDX
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "NetworkNodePortTypeSoapBinding", Namespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NodeDocument))]
    public partial class NetworkNode : Microsoft.Web.Services2.WebServicesClientProtocol
    {

        private System.Threading.SendOrPostCallback NotifyOperationCompleted;

        private System.Threading.SendOrPostCallback QueryOperationCompleted;

        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;

        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;

        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;

        private System.Threading.SendOrPostCallback GetServicesOperationCompleted;

        private System.Threading.SendOrPostCallback DownloadOperationCompleted;

        private System.Threading.SendOrPostCallback SubmitOperationCompleted;

        private System.Threading.SendOrPostCallback SolicitOperationCompleted;

        private System.Threading.SendOrPostCallback NodePingOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public NetworkNode()
        {
            this.Url = global::Node.Core.Properties.Settings.Default.Node_Core_CDX_NetworkNode;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event NotifyCompletedEventHandler NotifyCompleted;

        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;

        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;

        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;

        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;

        /// <remarks/>
        public event GetServicesCompletedEventHandler GetServicesCompleted;

        /// <remarks/>
        public event DownloadCompletedEventHandler DownloadCompleted;

        /// <remarks/>
        public event SubmitCompletedEventHandler SubmitCompleted;

        /// <remarks/>
        public event SolicitCompletedEventHandler SolicitCompleted;

        /// <remarks/>
        public event NodePingCompletedEventHandler NodePingCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Notify(string securityToken, string nodeAddress, string dataflow, NodeDocument[] documents)
        {
            object[] results = this.Invoke("Notify", new object[] {
                        securityToken,
                        nodeAddress,
                        dataflow,
                        documents});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void NotifyAsync(string securityToken, string nodeAddress, string dataflow, NodeDocument[] documents)
        {
            this.NotifyAsync(securityToken, nodeAddress, dataflow, documents, null);
        }

        /// <remarks/>
        public void NotifyAsync(string securityToken, string nodeAddress, string dataflow, NodeDocument[] documents, object userState)
        {
            if ((this.NotifyOperationCompleted == null))
            {
                this.NotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyOperationCompleted);
            }
            this.InvokeAsync("Notify", new object[] {
                        securityToken,
                        nodeAddress,
                        dataflow,
                        documents}, this.NotifyOperationCompleted, userState);
        }

        private void OnNotifyOperationCompleted(object arg)
        {
            if ((this.NotifyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyCompleted(this, new NotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Query(string securityToken, string request, [System.Xml.Serialization.SoapElementAttribute(DataType = "integer")] string rowId, [System.Xml.Serialization.SoapElementAttribute(DataType = "integer")] string maxRows, string[] parameters)
        {
            object[] results = this.Invoke("Query", new object[] {
                        securityToken,
                        request,
                        rowId,
                        maxRows,
                        parameters});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void QueryAsync(string securityToken, string request, string rowId, string maxRows, string[] parameters)
        {
            this.QueryAsync(securityToken, request, rowId, maxRows, parameters, null);
        }

        /// <remarks/>
        public void QueryAsync(string securityToken, string request, string rowId, string maxRows, string[] parameters, object userState)
        {
            if ((this.QueryOperationCompleted == null))
            {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        securityToken,
                        request,
                        rowId,
                        maxRows,
                        parameters}, this.QueryOperationCompleted, userState);
        }

        private void OnQueryOperationCompleted(object arg)
        {
            if ((this.QueryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Execute(string securityToken, string request, string[] parameters)
        {
            object[] results = this.Invoke("Execute", new object[] {
                        securityToken,
                        request,
                        parameters});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ExecuteAsync(string securityToken, string request, string[] parameters)
        {
            this.ExecuteAsync(securityToken, request, parameters, null);
        }

        /// <remarks/>
        public void ExecuteAsync(string securityToken, string request, string[] parameters, object userState)
        {
            if ((this.ExecuteOperationCompleted == null))
            {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        securityToken,
                        request,
                        parameters}, this.ExecuteOperationCompleted, userState);
        }

        private void OnExecuteOperationCompleted(object arg)
        {
            if ((this.ExecuteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetStatus(string securityToken, string transactionId)
        {
            object[] results = this.Invoke("GetStatus", new object[] {
                        securityToken,
                        transactionId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetStatusAsync(string securityToken, string transactionId)
        {
            this.GetStatusAsync(securityToken, transactionId, null);
        }

        /// <remarks/>
        public void GetStatusAsync(string securityToken, string transactionId, object userState)
        {
            if ((this.GetStatusOperationCompleted == null))
            {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        securityToken,
                        transactionId}, this.GetStatusOperationCompleted, userState);
        }

        private void OnGetStatusOperationCompleted(object arg)
        {
            if ((this.GetStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Authenticate(string userId, string credential, string authenticationMethod)
        {
            object[] results = this.Invoke("Authenticate", new object[] {
                        userId,
                        credential,
                        authenticationMethod});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AuthenticateAsync(string userId, string credential, string authenticationMethod)
        {
            this.AuthenticateAsync(userId, credential, authenticationMethod, null);
        }

        /// <remarks/>
        public void AuthenticateAsync(string userId, string credential, string authenticationMethod, object userState)
        {
            if ((this.AuthenticateOperationCompleted == null))
            {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        userId,
                        credential,
                        authenticationMethod}, this.AuthenticateOperationCompleted, userState);
        }

        private void OnAuthenticateOperationCompleted(object arg)
        {
            if ((this.AuthenticateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] GetServices(string securityToken, string serviceType)
        {
            object[] results = this.Invoke("GetServices", new object[] {
                        securityToken,
                        serviceType});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetServicesAsync(string securityToken, string serviceType)
        {
            this.GetServicesAsync(securityToken, serviceType, null);
        }

        /// <remarks/>
        public void GetServicesAsync(string securityToken, string serviceType, object userState)
        {
            if ((this.GetServicesOperationCompleted == null))
            {
                this.GetServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServicesOperationCompleted);
            }
            this.InvokeAsync("GetServices", new object[] {
                        securityToken,
                        serviceType}, this.GetServicesOperationCompleted, userState);
        }

        private void OnGetServicesOperationCompleted(object arg)
        {
            if ((this.GetServicesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("documents")]
        public NodeDocument[] Download(string securityToken, string transactionId, string dataflow, NodeDocument[] documents)
        {
            object[] results = this.Invoke("Download", new object[] {
                        securityToken,
                        transactionId,
                        dataflow,
                        documents});
            return ((NodeDocument[])(results[0]));
        }

        /// <remarks/>
        public void DownloadAsync(string securityToken, string transactionId, string dataflow, NodeDocument[] documents)
        {
            this.DownloadAsync(securityToken, transactionId, dataflow, documents, null);
        }

        /// <remarks/>
        public void DownloadAsync(string securityToken, string transactionId, string dataflow, NodeDocument[] documents, object userState)
        {
            if ((this.DownloadOperationCompleted == null))
            {
                this.DownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadOperationCompleted);
            }
            this.InvokeAsync("Download", new object[] {
                        securityToken,
                        transactionId,
                        dataflow,
                        documents}, this.DownloadOperationCompleted, userState);
        }

        private void OnDownloadOperationCompleted(object arg)
        {
            if ((this.DownloadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadCompleted(this, new DownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Submit(string securityToken, string transactionId, string dataflow, NodeDocument[] documents)
        {
            object[] results = this.Invoke("Submit", new object[] {
                        securityToken,
                        transactionId,
                        dataflow,
                        documents});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SubmitAsync(string securityToken, string transactionId, string dataflow, NodeDocument[] documents)
        {
            this.SubmitAsync(securityToken, transactionId, dataflow, documents, null);
        }

        /// <remarks/>
        public void SubmitAsync(string securityToken, string transactionId, string dataflow, NodeDocument[] documents, object userState)
        {
            if ((this.SubmitOperationCompleted == null))
            {
                this.SubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitOperationCompleted);
            }
            this.InvokeAsync("Submit", new object[] {
                        securityToken,
                        transactionId,
                        dataflow,
                        documents}, this.SubmitOperationCompleted, userState);
        }

        private void OnSubmitOperationCompleted(object arg)
        {
            if ((this.SubmitCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitCompleted(this, new SubmitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Solicit(string securityToken, string returnURL, string request, string[] parameters)
        {
            object[] results = this.Invoke("Solicit", new object[] {
                        securityToken,
                        returnURL,
                        request,
                        parameters});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SolicitAsync(string securityToken, string returnURL, string request, string[] parameters)
        {
            this.SolicitAsync(securityToken, returnURL, request, parameters, null);
        }

        /// <remarks/>
        public void SolicitAsync(string securityToken, string returnURL, string request, string[] parameters, object userState)
        {
            if ((this.SolicitOperationCompleted == null))
            {
                this.SolicitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitOperationCompleted);
            }
            this.InvokeAsync("Solicit", new object[] {
                        securityToken,
                        returnURL,
                        request,
                        parameters}, this.SolicitOperationCompleted, userState);
        }

        private void OnSolicitOperationCompleted(object arg)
        {
            if ((this.SolicitCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitCompleted(this, new SolicitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd", ResponseNamespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string NodePing(string Hello)
        {
            object[] results = this.Invoke("NodePing", new object[] {
                        Hello});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void NodePingAsync(string Hello)
        {
            this.NodePingAsync(Hello, null);
        }

        /// <remarks/>
        public void NodePingAsync(string Hello, object userState)
        {
            if ((this.NodePingOperationCompleted == null))
            {
                this.NodePingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodePingOperationCompleted);
            }
            this.InvokeAsync("NodePing", new object[] {
                        Hello}, this.NodePingOperationCompleted, userState);
        }

        private void OnNodePingOperationCompleted(object arg)
        {
            if ((this.NodePingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodePingCompleted(this, new NodePingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.ExchangeNetwork.net/schema/v1.0/node.xsd")]
    public partial class NodeDocument
    {

        private string nameField;

        private string typeField;

        private object contentField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public object content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void NotifyCompletedEventHandler(object sender, NotifyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetServicesCompletedEventHandler(object sender, GetServicesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DownloadCompletedEventHandler(object sender, DownloadCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public NodeDocument[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((NodeDocument[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SubmitCompletedEventHandler(object sender, SubmitCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SolicitCompletedEventHandler(object sender, SolicitCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SolicitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SolicitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void NodePingCompletedEventHandler(object sender, NodePingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodePingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NodePingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591